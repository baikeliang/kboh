{"version":3,"sources":["webpack:///./app/isomorphic-api/ApiClient.js?dc70"],"names":["methods","ApiClient","args","forEach","method","path","params","data","format","done","error","u","console","log","req","mode","cache","key","append","body","headers","then"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAEA,KAAMA,UAAU,CAAC,KAAD,EAAQ,MAAR,CAAhB;AAHA;;KAIqBC,S,GACjB,mBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd;AACAF,aAAQG,OAAR,CAAgB,UAACC,MAAD;AAAA,gBACZ,MAAKA,MAAL,IAAe,UAACC,IAAD,EAAsD;AAAA,+EAA5B,EAA4B;;AAAA,iBAA7CC,MAA6C,SAA7CA,MAA6C;AAAA,iBAArCC,IAAqC,SAArCA,IAAqC;AAAA;AAAA,iBAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,iBAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,iBAAXC,KAAW,QAAXA,KAAW;;AACjE;AACA,iBAAIC,IAAI,sCAAR;AACAC,qBAAQC,GAAR,CAAYT,MAAZ;AACA,iBAAIU,MAAM;AACNV,yBAAQA,MADF;AAENW,uBAAM,MAFA;AAGNC,wBAAO;AAHD,cAAV;AAKA,iBAAKZ,UAAU,KAAX,IAAqBE,MAAzB,EAAiC;AAAA;AAAA;AAAA;;AAAA;AAC7B,qEAAgB,oBAAYA,MAAZ,CAAhB,4GAAqC;AAAA,6BAA5BW,GAA4B;;AACnCN,2BAAEO,MAAF,CAASD,GAAT,EAAcX,OAAOW,GAAP,CAAd;AACD;AAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhC,cAJD,MAIO,IAAIb,UAAU,MAAV,IAAoBG,IAAxB,EAA8B;;AAEjCO,qBAAIK,IAAJ,GAAW,yBAAeZ,IAAf,CAAX;AACAO,qBAAIM,OAAJ,GAAc;AACV,qCAAgB;AADN,kBAAd;AAIH;AACDR,qBAAQC,GAAR,CAAY,eAAaR,IAAb,GAAkBM,CAA9B;AACA,oBAAO,+BAAMN,OAAOM,CAAb,EAAgBG,GAAhB,EAAqBO,IAArB,CAA0Bb,MAA1B,EAAkCa,IAAlC,CAAuCZ,IAAvC,EAA4CC,KAA5C,CAAP;AACH,UAxBW;AAAA,MAAhB;AA0BH;;AAED;;;mBA/BiBT,S","file":"0.aa5944330b0f09203979.hot-update.js","sourcesContent":["import Promise from 'bluebird'\nimport fetch from 'isomorphic-fetch'\n//import { URLSearchParams } from 'url-search-params-polyfill'\nimport { URLSearchParams } from 'urlsearchparams'\n\nconst methods = ['GET', 'POST'];\nexport default class ApiClient {\n    constructor(args) {\n        // code\n        methods.forEach((method) =>\n            this[method] = (path, { params, data } = {} ,{format,done,error}) => {\n                ///////////////////////////////\n                var u = new URLSearchParams();\n                console.log(method)\n                var req = {\n                    method: method,\n                    mode: 'cors',\n                    cache: 'default'\n                }\n                if ((method == 'GET') && params) {\n                    for (var key of Object.keys(params)) {\n                      u.append(key, params[key])\n                    }\n                } else if (method == 'POST' && data) {\n\n                    req.body = JSON.stringify(data)\n                    req.headers = {\n                        'Content-Type': 'application/json'\n                    }\n\n                }\n                console.log('8888888888'+path+u)\n                return fetch(path + u, req).then(format).then(done,error)\n            }\n        )\n    }\n\n    // methods\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/isomorphic-api/ApiClient.js\n **/"],"sourceRoot":""}