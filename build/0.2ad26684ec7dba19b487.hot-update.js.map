{"version":3,"sources":["webpack:///./app/isomorphic-api/ApiClient.js?dc70"],"names":["methods","ApiClient","args","forEach","method","path","params","data","done","error","u","console","log","req","mode","cache","key","append","body","headers","then","response","status","Error","json"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,KAAMA,UAAU,CAAC,KAAD,EAAQ,MAAR,CAAhB;;KACqBC,S,GACjB,mBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd;AACAF,aAAQG,OAAR,CAAgB,UAACC,MAAD;AAAA,gBACZ,MAAKA,MAAL,IAAe,UAACC,IAAD,EAA+C;AAAA,+EAArB,EAAqB;;AAAA,iBAAtCC,MAAsC,SAAtCA,MAAsC;AAAA,iBAA9BC,IAA8B,SAA9BA,IAA8B;AAAA;AAAA,iBAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,iBAAXC,KAAW,QAAXA,KAAW;;AAC1D;AACA,iBAAIC,IAAI,8CAAR;AACAC,qBAAQC,GAAR,CAAYR,MAAZ;AACA,iBAAIS,MAAM;AACNT,yBAAQA,MADF;AAENU,uBAAM,MAFA;AAGNC,wBAAO;AAHD,cAAV;AAKA,iBAAKX,UAAU,KAAX,IAAqBE,MAAzB,EAAiC;AAAA;AAAA;AAAA;;AAAA;AAC7B,qEAAgB,oBAAYA,MAAZ,CAAhB,4GAAqC;AAAA,6BAA5BU,GAA4B;;AACnCN,2BAAEO,MAAF,CAASD,GAAT,EAAcV,OAAOU,GAAP,CAAd;AACD;AAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhC,cAJD,MAIO,IAAIZ,UAAU,MAAV,IAAoBG,IAAxB,EAA8B;;AAEjCM,qBAAIK,IAAJ,GAAW,yBAAeX,IAAf,CAAX;AACAM,qBAAIM,OAAJ,GAAc;AACV,qCAAgB;AADN,kBAAd;AAIH;AACD,oBAAO,+BAAMd,OAAOK,CAAb,EAAgBG,GAAhB,EAAqBO,IAArB,CAA0B,UAASC,QAAT,EAAmB;AAChD,qBAAIA,SAASC,MAAT,IAAmB,GAAvB,EAA4B;AACxB,2BAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH;AACDZ,yBAAQC,GAAR,CAAY,oBAAZ;AACAD,yBAAQC,GAAR,CAAYS,SAASG,IAAT,EAAZ;AACA,wBAAOH,SAASG,IAAT,EAAP;AACH,cAPM,EAOL,UAAUf,KAAV,EAAgB,CAAE,CAPb,CAAP;AAQH,UA9BW;AAAA,MAAhB;AAgCH;;AAED;;;mBArCiBR,S","file":"0.2ad26684ec7dba19b487.hot-update.js","sourcesContent":["import Promise from 'bluebird'\nimport fetch from 'isomorphic-fetch'\nimport { URLSearchParams } from 'url-search-params-polyfill'\n\nconst methods = ['GET', 'POST'];\nexport default class ApiClient {\n    constructor(args) {\n        // code\n        methods.forEach((method) =>\n            this[method] = (path, { params, data } = {}, {done,error}) => {\n                ///////////////////////////////\n                var u = new URLSearchParams();\n                console.log(method)\n                var req = {\n                    method: method,\n                    mode: 'cors',\n                    cache: 'default'\n                }\n                if ((method == 'GET') && params) {\n                    for (var key of Object.keys(params)) {\n                      u.append(key, params[key])\n                    }\n                } else if (method == 'POST' && data) {\n\n                    req.body = JSON.stringify(data)\n                    req.headers = {\n                        'Content-Type': 'application/json'\n                    }\n\n                }\n                return fetch(path + u, req).then(function(response) {\n                    if (response.status >= 400) {\n                        throw new Error(\"Bad response from server\");\n                    }\n                    console.log('QQQQQQQQQQQQQQQQQQ')\n                    console.log(response.json())\n                    return response.json();\n                },function (error){})\n            }\n        )\n    }\n\n    // methods\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/isomorphic-api/ApiClient.js\n **/"],"sourceRoot":""}