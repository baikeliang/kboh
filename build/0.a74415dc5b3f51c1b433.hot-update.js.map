{"version":3,"sources":["webpack:///./app/server.js?7fe7"],"names":["app","use","publicPath","output","stats","colors","resolve","alias","HTML","content","store","__html","getState","get","req","res","send","next","memoryHistory","url","history","console","log","indexOf","routes","location","error","redirectLocation","renderProps","status","message","redirect","pathname","search","listen"],"mappings":";;;;;;;;;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;;;;;AAhBA;AAoBA,KAAMA,MAAM,wBAAZ;;AAEAA,KAAIC,GAAJ,CAAQ,oCAAqB,qDAArB,EAA6C;AACnDC,eAAY,8BAAcC,MAAd,CAAqBD,UADkB;AAEnDE,UAAO;AACLC,aAAQ;AADH,IAF4C;AAKnDC,YAAS;AACHC,YAAO;AACHP,YAAK,8BAAcM,OAAd,CAAsBC,KAAtB,CAA4BP;AAD9B;AADJ;AAL0C,EAA7C,CAAR;;AAYA,KAAMQ,OAAO,SAAPA,IAAO;AAAA,OAAGC,OAAH,QAAGA,OAAH;AAAA,OAAYC,KAAZ,QAAYA,KAAZ;AAAA,UACX;AAAA;AAAA,OAAM,MAAK,IAAX;AACE;AAAA;AAAA;AACI,+CAAM,SAAQ,OAAd,GADJ;AAEI;AAAA;AAAA;AAAA;AAAA,QAFJ;AAGI,+CAAM,MAAK,UAAX,EAAsB,SAAQ,uEAA9B,GAHJ;AAII,+CAAM,KAAI,YAAV,EAAuB,MAAK,wEAA5B;AAJJ,MADF;AAOE;AAAA;AAAA;AACE,8CAAK,IAAG,MAAR,EAAe,yBAAyB,EAAEC,QAAQF,OAAV,EAAxC,GADF;AAEE,8CAAK,IAAG,UAAR,GAFF;AAGE,iDAAQ,yBAAyB,EAAEE,qCAAmC,mCAAUD,MAAME,QAAN,EAAV,CAAnC,MAAF,EAAjC,GAHF;AAIE,iDAAQ,KAAI,YAAZ;AAJF;AAPF,IADW;AAAA,EAAb;;AAiBAZ,KAAIa,GAAJ,CAAQ,kBAAR,EAA2B,UAASC,GAAT,EAAaC,GAAb,EAAiB;;AAExCA,OAAIC,IAAJ,CAAS,OAAT;AACH,EAHD;;AAKAhB,KAAIC,GAAJ,CAAQ,UAAUa,GAAV,EAAeC,GAAf,EAAoBE,IAApB,EAA0B;AAChC,OAAMC,gBAAgB,sCAAoBJ,IAAIK,GAAxB,CAAtB;AACA,OAAMT,QAAQ,oCAAeQ,aAAf,CAAd;AACA,OAAME,UAAU,4CAAqBF,aAArB,EAAoCR,KAApC,CAAhB;;AAEAW,WAAQC,GAAR,CAAY,cAAZ;AACAD,WAAQC,GAAR,CAAYR,IAAIK,GAAhB;;AAEA,OAAGL,IAAIK,GAAJ,CAAQI,OAAR,CAAgB,aAAhB,KAAgC,CAAnC,EAAqC;AACjCN;AACA;AACH;;AAED,2BAAM,EAAEG,gBAAF,EAAWI,wBAAX,EAAmBC,UAAUX,IAAIK,GAAjC,EAAN,EAA8C,UAACO,KAAD,EAAQC,gBAAR,EAA0BC,WAA1B,EAA0C;AACtF,SAAIF,KAAJ,EAAW;AACTX,WAAIc,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,CAAqBU,MAAMI,OAA3B;AACD,MAFD,MAEO,IAAIH,gBAAJ,EAAsB;AAC3BZ,WAAIgB,QAAJ,CAAa,GAAb,EAAkBJ,iBAAiBK,QAAjB,GAA4BL,iBAAiBM,MAA/D;AACD,MAFM,MAEA,IAAIL,WAAJ,EAAiB;AACtB,WAAMnB,UAAU,4BACd;AAAA;AAAA,WAAU,OAAOC,KAAjB;AACE,mEAAmBkB,WAAnB;AADF,QADc,CAAhB;;AAMAb,WAAIC,IAAJ,CAAS,sBAAsB,4BAAe,8BAAC,IAAD,IAAM,SAASP,OAAf,EAAwB,OAAOC,KAA/B,GAAf,CAA/B;AACD;AACF,IAdD;AAeD,EA5BD;;AA8BAV,KAAIkC,MAAJ,CAAW,IAAX,EAAiB,YAAY;AAC3Bb,WAAQC,GAAR,CAAY,2DAAZ;AACD,EAFD,E","file":"0.a74415dc5b3f51c1b433.hot-update.js","sourcesContent":["/*eslint-disable no-console */\nimport express from 'express'\nimport serialize from 'serialize-javascript'\n\nimport webpack from 'webpack'\nimport webpackDevMiddleware from 'webpack-dev-middleware'\nimport webpackConfig from '../webpack.client.config.js'\n\nimport React from 'react'\nimport { renderToString } from 'react-dom/server'\nimport { Provider } from 'react-redux'\nimport { createMemoryHistory, match, RouterContext } from 'react-router'\nimport { syncHistoryWithStore } from 'react-router-redux'\n\nimport { configureStore } from './configure-store.js'\n\nimport routes from './routes'\n\n\n\nconst app = express()\n\napp.use(webpackDevMiddleware(webpack(webpackConfig), {\n  publicPath: webpackConfig.output.publicPath,\n  stats: {\n    colors: true\n  },\n  resolve: {\n        alias: {\n            app: webpackConfig.resolve.alias.app\n        }\n    }\n}))\n\nconst HTML = ({ content, store }) => (\n  <html lang=\"en\">\n    <head>\n        <meta charSet=\"utf-8\"/>\n        <title>登陆</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1\"/>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/Swiper/3.3.1/css/swiper.min.css\"/>\n    </head>\n    <body>\n      <div id=\"root\" dangerouslySetInnerHTML={{ __html: content }}/>\n      <div id=\"devtools\"/>\n      <script dangerouslySetInnerHTML={{ __html: `window.__initialState__=${serialize(store.getState())};` }}/>\n      <script src=\"/bundle.js\"/>\n    </body>\n  </html>\n)\n\napp.get('/wxcallback/auth',function(req,res){\n\n    res.send('sssss')\n});\n\napp.use(function (req, res, next) {\n  const memoryHistory = createMemoryHistory(req.url)\n  const store = configureStore(memoryHistory)\n  const history = syncHistoryWithStore(memoryHistory, store)\n\n  console.log(\"LKKKKKKKKKKK\");\n  console.log(req.url);\n\n  if(req.url.indexOf('/wxcallback')==0){\n      next();\n      return;\n  }\n\n  match({ history, routes, location: req.url }, (error, redirectLocation, renderProps) => {\n    if (error) {\n      res.status(500).send(error.message)\n    } else if (redirectLocation) {\n      res.redirect(302, redirectLocation.pathname + redirectLocation.search)\n    } else if (renderProps) {\n      const content = renderToString(\n        <Provider store={store}>\n          <RouterContext {...renderProps}/>\n        </Provider>\n      )\n\n      res.send('<!doctype html>\\n' + renderToString(<HTML content={content} store={store}/>))\n    }\n  })\n})\n\napp.listen(3000, function () {\n  console.log('Server listening on http://localhost:3000, Ctrl+C to stop')\n})\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/server.js\n **/"],"sourceRoot":""}